{"ast":null,"code":"var _jsxFileName = \"/Users/sergio/Documents/Classes/CS-415/cs415_project/website/src/Components/LoginForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  const navigate = useNavigate();\n  const [email, setEmail] = useState('');\n  const [pass, setPass] = useState('');\n  const [error, setError] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    const payload = {\n      email: email,\n      password: pass\n    };\n    try {\n      const response = await fetch('http://localhost:8000/login/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        // If the backend responds with an error status, display the error message\n        setError(data.error || \"Login failed. Please check your credentials.\");\n      } else {\n        // Assuming your backend returns a property `success` and a JWT `token` upon successful authentication\n        if (data.success) {\n          // Store the received token in sessionStorage or localStorage\n          sessionStorage.setItem(\"auth\", true); // Consider using localStorage if you want to persist login state across sessions\n          sessionStorage.setItem(\"token\", data.token);\n          sessionStorage.setItem(\"user_id\", data.user_id); // Make sure to handle the user ID securely\n          navigate('/userprofile'); // Redirect the user to their profile\n        } else {\n          // If the backend indicates failure without an HTTP error status\n          setError(\"Login failed. Please check your credentials.\");\n        }\n      }\n    } catch (error) {\n      console.error(\"An error occurred during login:\", error);\n      setError(\"An unexpected error occurred. Please try again later.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"login-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        required: true,\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        type: \"email\",\n        placeholder: \"email@email.com\",\n        id: \"email\",\n        name: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        required: true,\n        value: pass,\n        onChange: e => setPass(e.target.value),\n        type: \"password\",\n        placeholder: \"*********\",\n        id: \"password\",\n        name: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-error\",\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 53\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"link-btn\",\n      onClick: () => navigate('/register'),\n      children: \"Don't have an account? Register here.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(LoginForm, \"PBC00FxIOCyMoio6D5ZOQ9dTTAI=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","LoginForm","_s","navigate","email","setEmail","pass","setPass","error","setError","handleSubmit","e","preventDefault","payload","password","response","fetch","method","headers","body","JSON","stringify","data","json","ok","success","sessionStorage","setItem","token","user_id","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","htmlFor","required","value","onChange","target","type","placeholder","id","name","onClick","_c","$RefreshReg$"],"sources":["/Users/sergio/Documents/Classes/CS-415/cs415_project/website/src/Components/LoginForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\n\nconst LoginForm = () => {\n    const navigate = useNavigate();\n    const [email, setEmail] = useState('');\n    const [pass, setPass] = useState('');\n    const [error, setError] = useState('');\n\n    const handleSubmit = async (e) => {\n      e.preventDefault();\n      setError('');\n\n      const payload = {\n          email: email,\n          password: pass\n      };\n\n      try {\n          const response = await fetch('http://localhost:8000/login/', {\n              method: 'POST',\n              headers: {\n                  'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(payload)\n          });\n\n          const data = await response.json();\n\n          if (!response.ok) {\n              // If the backend responds with an error status, display the error message\n              setError(data.error || \"Login failed. Please check your credentials.\");\n          } else {\n              // Assuming your backend returns a property `success` and a JWT `token` upon successful authentication\n              if (data.success) {\n                  // Store the received token in sessionStorage or localStorage\n                  sessionStorage.setItem(\"auth\", true); // Consider using localStorage if you want to persist login state across sessions\n                  sessionStorage.setItem(\"token\", data.token);\n                  sessionStorage.setItem(\"user_id\", data.user_id); // Make sure to handle the user ID securely\n                  navigate('/userprofile'); // Redirect the user to their profile\n              } else {\n                  // If the backend indicates failure without an HTTP error status\n                  setError(\"Login failed. Please check your credentials.\");\n              }\n          }\n      } catch (error) {\n          console.error(\"An error occurred during login:\", error);\n          setError(\"An unexpected error occurred. Please try again later.\");\n      }\n    };\n\n    return (\n        <div>\n            <h2>Login</h2>\n            <form className=\"login-form\" onSubmit={handleSubmit}>\n                <label htmlFor=\"email\">Email</label>\n                <input required value={email} onChange={(e) => setEmail(e.target.value)} type=\"email\" placeholder=\"email@email.com\" id=\"email\" name=\"email\"/>\n                <label htmlFor=\"password\">Password</label>\n                <input required value={pass} onChange={(e) => setPass(e.target.value)} type=\"password\" placeholder=\"*********\" id=\"password\" name=\"password\"/>\n                <button type=\"submit\">Login</button>\n                {error && <p className=\"text-error\"><b>{error}</b></p>}\n            </form>\n            <button className=\"link-btn\" onClick={() => navigate('/register')}>Don't have an account? Register here.</button>\n        </div>\n    );\n};\n\nexport default LoginForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}